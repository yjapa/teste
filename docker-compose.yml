version: '3.3'

services:
  postgres:
    image: postgres
    ports:
      - '5432:5432'
    volumes:
      - './db-data:/var/lib/postgresql/data'
      - './db/init.sql:/docker-entrypoint-initdb.d/backend.sql'
    environment:
      POSTGRES_PASSWORD: 123
      POSTGRES_USER: klever
      POSTGRES_DB: explorer
    command: -c max_connections=200
  redis:
    image: redis
    ports:
      - '6379:6379'
  zookeeper:
    image: zookeeper:3.4.9
    hostname: zoo
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888
    volumes:
      - zk:/zoo/data
      - zk:/zoo/datalog
  kafka:
    image: confluentinc/cp-kafka:5.5.0
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OPTS: "-Djava.net.preferIPv4Stack=True"
      KAFKA_NUM_PARTITIONS: 5

    volumes:
      - zk:/kafka/data
    depends_on:
      - zookeeper
volumes:
  zk: